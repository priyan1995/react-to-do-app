{"version":3,"sources":["firebase.js","components/AddTodo.jsx","components/EditTodo.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["FirebaseDb","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","AddToDo","useState","todoId","todoItem","todo","setTodo","todoForm","document","getElementById","onSubmit","e","preventDefault","reset","console","log","child","push","err","id","className","type","name","onChange","Math","floor","random","target","value","trim","required","EditTodo","editId","useParams","todotem","editTodo","useEffect","on","snapshot","val","set","disabled","to","ToDoList","todos","setTodos","spanshot","Object","keys","map","onClick","key","window","confirm","remove","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iNAmBiBA,E,MAFIC,cAXE,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,wDACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKSC,WAAWC,M,OCqDxBC,EArEC,WAGZ,IAKA,EAAwBC,mBALH,CACjBC,OAAQ,GACRC,SAAU,KAGd,mBAAOC,EAAP,KAAaC,EAAb,KAIMC,EAAWC,SAASC,eAAe,YA6BzC,OACI,qCAEI,8CACA,sBAAMC,SAvBE,SAACC,GACbA,EAAEC,iBACFN,EAAQ,IACRC,EAASM,QACTC,QAAQC,IAAIV,GAIZhB,EAAW2B,MAAM,SAASC,KACtBZ,GACA,SAAAa,GACQA,GACAJ,QAAQC,IAAIG,OAWKC,GAAG,WAA5B,SAEI,sBAAKC,UAAU,iBAAf,UACA,qBAAKA,UAAU,WAAf,SACI,uBACIA,UAAU,eACVC,KAAK,OACLC,KAAK,WACLC,SAvCE,SAACZ,GACnBL,EAAQ,2BACDD,GADA,gBAEHF,OAAQqB,KAAKC,MAAsB,IAAhBD,KAAKE,WACvBf,EAAEgB,OAAOL,KAAOX,EAAEgB,OAAOC,MAAMC,WAoCpBC,UAAQ,MAGZ,qBAAKV,UAAU,WAAf,SACA,wBAAQC,KAAK,SAASD,UAAU,yBAAhC,+BCzDPW,EAAW,WAGpB,IAAQC,EAAWC,cAAXD,OAER,EAA4B9B,mBAAS,IAArC,mBAAOgC,EAAP,KAAgBC,EAAhB,KAGAC,qBAAU,WACN/C,EAAW2B,MAAX,gBAA0BgB,IAAUK,GAAG,SAAS,SAAAC,GACtB,MAAlBA,EAASC,QAETJ,EAAS,eACFG,EAASC,QAGhBzB,QAAQC,IAAImB,SAGrB,IA2BH,OACI,qCAEI,2CAEA,sBAAMxB,SApBS,SAACC,GACpBA,EAAEC,iBACFE,QAAQC,IAAImB,GAEZ7C,EAAW2B,MAAX,gBAA0BgB,IAAUQ,IAChCN,GACA,SAAAhB,GACQA,GACAJ,QAAQC,IAAIG,OAYYC,GAAG,WAAnC,SAEI,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,uBACIA,UAAU,eACVQ,MAAOM,EAAQ/B,OACfsC,UAAQ,MAGhB,qBAAKrB,UAAU,WAAf,SACI,uBACIA,UAAU,eACVC,KAAK,OACLC,KAAK,WACLM,MAAOM,EAAQ9B,SACfmB,SA7CC,SAACZ,GACtBwB,EAAS,aACLhC,OAAQ+B,EAAQ/B,QACfQ,EAAEgB,OAAOL,KAAOX,EAAEgB,OAAOC,SA2CVE,UAAQ,MAGhB,qBAAKV,UAAU,WAAf,SACI,wBAAQC,KAAK,SAASD,UAAU,8BAAhC,2BAMZ,cAAC,IAAD,CAAMsB,GAAG,oBAAT,8BC9ECC,EAAW,WAEpB,MAA0BzC,mBAAS,IAAnC,mBAAO0C,EAAP,KAAcC,EAAd,KAGAT,qBAAU,WACN/C,EAAW2B,MAAM,SAASqB,GAAG,SAAS,SAAAS,GACZ,MAAlBA,EAASP,OACTM,EAAS,eACFC,EAASP,aAIzB,IAeH,OACI,qCAEI,4CACA,wBAAOnB,UAAU,QAAjB,UACI,gCACI,+BACI,oCACA,uCACA,8CAIR,gCAGQ2B,OAAOC,KAAKJ,GAAOK,KAAI,SAAA9B,GACnB,OACI,mCACI,+BACI,6BAAMyB,EAAMzB,GAAIhB,SAChB,6BAAMyC,EAAMzB,GAAIf,WAChB,+BACI,cAAC,IAAD,CAAMgB,UAAU,0BAA0BsB,GAAE,gBAAWvB,GAAvD,kBACA,wBAAQC,UAAU,2BAA2B8B,QAAS,kBApC5EC,EAoC2FhC,OAnCrGiC,OAAOC,QAAQ,8CACfhE,EAAW2B,MAAX,gBAA0BmC,IAAOG,QAC7B,SAAApC,GACQA,GACAJ,QAAQC,IAAIG,OALf,IAACiC,GAoCsB,yBALChC,iBCV9BoC,MAjCf,WACE,OACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,qBAAKnC,UAAU,iBAAf,SAEE,sBAAKA,UAAU,aAAf,UAGE,eAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,oBAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAGF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SAEE,cAAC,EAAD,kBCbDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7D,SAASC,eAAe,SAM1BiD,K","file":"static/js/main.a4d0e635.chunk.js","sourcesContent":["\r\nimport * as firebase from 'firebase';\r\n\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBM3GerJtBBQdpwJTFg99WdAEf3ZJb3m9Y\",\r\n    authDomain: \"react-to-do-e8cc2.firebaseapp.com\",\r\n    databaseURL: \"https://react-to-do-e8cc2-default-rtdb.firebaseio.com\",\r\n    projectId: \"react-to-do-e8cc2\",\r\n    storageBucket: \"react-to-do-e8cc2.appspot.com\",\r\n    messagingSenderId: \"174613237022\",\r\n    appId: \"1:174613237022:web:98118c34281342c47ecd0f\",\r\n    measurementId: \"G-GTXV7Q7CYM\"\r\n  };\r\n\r\n  const FirebaseDb = firebase.initializeApp(firebaseConfig);\r\n\r\n  export default FirebaseDb.database().ref() ;","import React, { useState } from 'react'\r\nimport FirebaseDb from '../firebase';\r\n\r\nconst AddToDo = () => {\r\n\r\n\r\n    const initialData = ({\r\n        todoId: '',\r\n        todoItem: ''\r\n    })\r\n\r\n    const [todo, setTodo] = useState(initialData);\r\n\r\n\r\n\r\n    const todoForm = document.getElementById('todoForm');\r\n\r\n    const handleAddTodo = (e) => {\r\n        setTodo({\r\n            ...todo,\r\n            todoId: Math.floor(Math.random() * 1000),\r\n            [e.target.name]: e.target.value.trim()\r\n        })\r\n    }\r\n\r\n    const addToDo = (e) => {\r\n        e.preventDefault()\r\n        setTodo('');\r\n        todoForm.reset();\r\n        console.log(todo)\r\n\r\n        // props.addOrEdit(todo)\r\n\r\n        FirebaseDb.child('to-do').push(\r\n            todo,\r\n            err => {\r\n                if (err)\r\n                    console.log(err)\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <h2>Add new item</h2>\r\n            <form onSubmit={addToDo} id=\"todoForm\">\r\n\r\n                <div className=\"row form-group\">\r\n                <div className=\"col-lg-8\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"todoItem\"\r\n                        onChange={handleAddTodo}\r\n                        required\r\n                    />\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                    <button type=\"submit\" className=\"btn btn-primary w-100 \">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default AddToDo;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport FirebaseDb from '../firebase';\r\n\r\nexport const EditTodo = () => {\r\n\r\n\r\n    const { editId } = useParams();\r\n\r\n    const [todotem, editTodo] = useState({})\r\n\r\n    // get data from API\r\n    useEffect(() => {\r\n        FirebaseDb.child(`to-do/${editId}`).on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n\r\n                editTodo({\r\n                    ...snapshot.val()\r\n\r\n                })\r\n                console.log(todotem)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    // ===== handle change \r\n    const handleEditChange = (e) => {\r\n        editTodo({\r\n            todoId: todotem.todoId,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    // === submit data   \r\n    const editTodoSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(todotem);\r\n\r\n        FirebaseDb.child(`to-do/${editId}`).set(\r\n            todotem,\r\n            err => {\r\n                if (err) {\r\n                    console.log(err)\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <h2>Edit Todo</h2>\r\n\r\n            <form onSubmit={editTodoSubmit} id=\"editForm\">\r\n\r\n                <div className=\"row form-group\">\r\n                    <div className=\"col-lg-6\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={todotem.todoId}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"todoItem\"\r\n                            value={todotem.todoItem}\r\n                            onChange={handleEditChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                        <button type=\"submit\" className=\"btn btn-primary w-100 mt-15\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n\r\n            <Link to=\"/react-to-do-app/\">Back To List</Link>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport FirebaseDb from '../firebase';\r\nimport { Link  } from 'react-router-dom';\r\n\r\nexport const ToDoList = () => {\r\n\r\n    const [todos, setTodos] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n        FirebaseDb.child('to-do').on('value', spanshot => {\r\n            if (spanshot.val() != null) {\r\n                setTodos({\r\n                    ...spanshot.val()\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n    const onDelete = (key) => {\r\n        if (window.confirm('Are you sure want to delete this record ?')) {\r\n            FirebaseDb.child(`to-do/${key}`).remove(\r\n                err => {\r\n                    if (err) {\r\n                        console.log(err)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <h2>To Do List</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Tasks</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n\r\n                    {\r\n                        Object.keys(todos).map(id => {\r\n                            return (\r\n                                <>\r\n                                    <tr key={id}>\r\n                                        <td >{todos[id].todoId}</td>\r\n                                        <td >{todos[id].todoItem}</td>\r\n                                        <td>\r\n                                            <Link className=\"editbtn btn btn-success\" to={`/edit/${id}`}>Edit</Link>\r\n                                            <button className=\"deletebtn btn btn-danger\" onClick={() => onDelete(id)}>Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </tbody>\r\n\r\n\r\n\r\n\r\n            </table>\r\n\r\n        </>\r\n    )\r\n}","\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport AddToDo from './components/AddTodo';\nimport { EditTodo } from './components/EditTodo';\nimport { ToDoList } from './components/TodoList';\n\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <div className=\"react-todo-App\">\n\n            <div className=\"container \">\n\n\n              <Route exact path=\"/react-to-do-app/\">\n                <AddToDo />\n                <ToDoList />\n              </Route>\n\n              <Route path=\"/edit/:editId\">\n\n                <EditTodo />\n\n              </Route>\n\n\n\n\n            </div>\n\n          </div>\n        </Switch>\n      </Router >\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}